node {
    stage 'bootstrap'
    <%= render_template('bootstrap.pipeline', vcs: vcs, gemfile: gemfile, autoproj_install_path: autoproj_install_path) %>
    def autoproj = "${pwd()}/dev/.autoproj/bin/autoproj"
    dir('dev') {
        stage 'checkout and update packages'
        sh "${autoproj} update <%= packages.map { |pkg| "'#{pkg.name}'" }.join(" ") %> --force-reset -k"

        stage 'update package jobs and trigger them'
        def arg_packages = "<%= packages.map { |pkg| "'#{pkg.name}'" }.join(" ") %>"
        def arg_dev      = "<%= " --dev" if dev %>"
        def arg_job_prefix = "<%= " '--job-prefix=#{job_prefix}'" if !job_prefix.empty? %>"
        def credentials = ""
        <% if credentials_id %>
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: '<%= credentials_id %>',
                          usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
            credentials = " --username '${env.USERNAME}' --password '${env.PASSWORD}'"
        }
        <% end %>
        sh "${autoproj} jenkins update${arg_dev}${arg_job_prefix} 'http://localhost:8080' ${arg_packages}${credentials}"
        <% job_names.each do |job_name| %>
        build job: "<%= job_name %>", wait: false
        <% end %>
    }
}

